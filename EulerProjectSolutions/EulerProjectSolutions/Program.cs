using System;

namespace EulerProjectSolutions
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
            
        }

        
        
        /* Problem 1 
         
         If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
          The sum of these multiples is 23.
          Find the sum of all the multiples of 3 or 5 below 1000.
          
        */
        
        public static int Multiplesof3or5(int limit)
        
        {
            if (limit<0)
            {
                throw new ArgumentOutOfRangeException("limit should be greater than 0",nameof(limit));
            }
            
            int sum = 0;
            
            for (int number = 0; number < limit; number++)
            {
                if (number % 3 == 0 || number % 5 ==0 )
                {
                    sum += number;
                }
            }
            return sum;
        }
        
        /*  End of Problem 1 */
        
        /* Problem 2
         
           Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 
           1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

           By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum
           of the even-valued terms.
       */

        /*
         * Function to calculate Fibonacci numbers
         */
        private static int Fibonacci(int number) 
        {
            
            if (number == 1 || number == 0) // problem said we should start with 1 .
            {
                return 1;
            }

            if (number < 0)
            {
                throw new ArgumentOutOfRangeException(nameof(number));
            }
            
            

            return Fibonacci(number - 1) + Fibonacci(number - 2);
        }

        /*
        * Function to see if number is even 
        */
        private static bool IsEven(int number)
        {
            return number % 2 == 0 ;
        }

        public static uint SumEvenFibonaccinumbers(int limit)
        {
            if (limit > 4000000)
            {
                throw new ArgumentOutOfRangeException(nameof(limit));
            }

            int counter = 1;
            uint sum = 0;
            
            while (Fibonacci(counter) <= limit)
            {
                
                if (IsEven(Fibonacci(counter)))
                {
                    sum += (uint) Fibonacci(counter);
                }

                counter++;
            }
            
            return sum;
        }
    }
}
